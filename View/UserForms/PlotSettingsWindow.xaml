<Window x:Class="SerialPlotDN_WPF.View.UserForms.PlotSettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SerialPlotDN_WPF.View.UserForms"
        mc:Ignorable="d"
        Title="Plot Settings" Height="500" Width="400" 
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="NoResize" 
        WindowStartupLocation="CenterScreen"
        Background="Transparent">
    <Window.Resources>
        <!-- Dark theme styles using global resources -->
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_TextBoxBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,3"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_TextBoxBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_ButtonForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Custom close button style -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_CloseButtonForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_CloseButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_CloseButtonPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!-- Main container with border and drop shadow -->
    <Border Background="{DynamicResource PlotSettings_BackgroundBrush}" 
            BorderBrush="{DynamicResource PlotSettings_BorderBrush}" 
            BorderThickness="1"
            CornerRadius="5">
        <Border.Effect>
            <DropShadowEffect Color="{DynamicResource PlotSettings_ShadowColor}" BlurRadius="10" ShadowDepth="3" Opacity="0.5"/>
        </Border.Effect>
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- Custom title bar -->
            <Grid Grid.Row="0" Background="{DynamicResource PlotSettings_TitleBarBrush}" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Plot Settings" 
                           Foreground="{DynamicResource PlotSettings_LabelForegroundBrush}" 
                           FontSize="14" FontWeight="SemiBold"
                           VerticalAlignment="Center" 
                           Margin="15,8"/>
                <!-- Close button -->
                <Button Grid.Column="1" 
                        Style="{StaticResource CloseButtonStyle}"
                        Content="✕" 
                        Click="CloseButton_Click"
                        ToolTip="Close"/>
            </Grid>
            <!-- Header -->
            <TextBlock Grid.Row="1" Text="Configure plot and rendering settings" 
                       FontSize="12" 
                       Foreground="{DynamicResource PlotSettings_HeaderForegroundBrush}" 
                       Margin="20,15,20,5"/>
            <!-- Settings Content -->
            <StackPanel Grid.Row="2" Margin="20,10,20,0">
                <!-- Plot Update Rate (FPS) -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="Plot Update Rate (FPS):" VerticalAlignment="Center"/>
                    <TextBox x:Name="TextBoxPlotFPS" Grid.Column="1" VerticalAlignment="Center" 
                             Text="{Binding PlotUpdateRateFPS, StringFormat=F1}"
                             PreviewTextInput="DecimalOnly_PreviewTextInput"/>
                    <StackPanel Grid.Column="2" Orientation="Vertical" Margin="5,0,0,0">
                        <Button x:Name="ButtonPlotFPSUp" Content="▲" Height="15" FontSize="8" 
                                Click="ButtonPlotFPSUp_Click" Margin="0,0,0,1"/>
                        <Button x:Name="ButtonPlotFPSDown" Content="▼" Height="15" FontSize="8" 
                                Click="ButtonPlotFPSDown_Click"/>
                    </StackPanel>
                </Grid>
                
                <!-- Serial Port Update Rate (Hz) -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="Serial Update Rate (Hz):" VerticalAlignment="Center"/>
                    <TextBox x:Name="TextBoxSerialHz" Grid.Column="1" VerticalAlignment="Center" 
                             Text="{Binding SerialPortUpdateRateHz}"
                             PreviewTextInput="NumbersOnly_PreviewTextInput"/>
                    <StackPanel Grid.Column="2" Orientation="Vertical" Margin="5,0,0,0">
                        <Button x:Name="ButtonSerialHzUp" Content="▲" Height="15" FontSize="8" 
                                Click="ButtonSerialHzUp_Click" Margin="0,0,0,1"/>
                        <Button x:Name="ButtonSerialHzDown" Content="▼" Height="15" FontSize="8" 
                                Click="ButtonSerialHzDown_Click"/>
                    </StackPanel>
                </Grid>
                
                <!-- Line Width -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="Line Width:" VerticalAlignment="Center"/>
                    <TextBox x:Name="TextBoxLineWidth" Grid.Column="1" VerticalAlignment="Center" 
                             Text="{Binding LineWidth}"
                             PreviewTextInput="NumbersOnly_PreviewTextInput"/>
                    <StackPanel Grid.Column="2" Orientation="Vertical" Margin="5,0,0,0">
                        <Button x:Name="ButtonLineWidthUp" Content="▲" Height="15" FontSize="8" 
                                Click="ButtonLineWidthUp_Click" Margin="0,0,0,1"/>
                        <Button x:Name="ButtonLineWidthDown" Content="▼" Height="15" FontSize="8" 
                                Click="ButtonLineWidthDown_Click"/>
                    </StackPanel>
                </Grid>
                
                <!-- Anti-Aliasing -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="Anti-Aliasing:" VerticalAlignment="Center"/>
                    <CheckBox x:Name="CheckBoxAntiAliasing" Grid.Column="1" VerticalAlignment="Center" 
                              IsChecked="{Binding AntiAliasing}"/>
                </Grid>
                
                <!-- Show Render Time -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="Show Render Time:" VerticalAlignment="Center"/>
                    <CheckBox x:Name="CheckBoxShowRenderTime" Grid.Column="1" VerticalAlignment="Center" 
                              IsChecked="{Binding ShowRenderTime}"/>
                </Grid>

                <!-- Y-Axis Auto Scale -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="Y-Axis Auto Scale:" VerticalAlignment="Center"/>
                    <CheckBox x:Name="CheckBoxYAutoScale" Grid.Column="1" VerticalAlignment="Center" 
                              IsChecked="{Binding YAutoScale}"/>
                </Grid>

                <!-- X Min -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="X Min:" VerticalAlignment="Center"/>
                    <TextBox x:Name="TextBoxXMin" Grid.Column="1" VerticalAlignment="Center" 
                             Text="{Binding Xmin}"
                             PreviewTextInput="NumbersOnly_PreviewTextInput"/>
                    <StackPanel Grid.Column="2" Orientation="Vertical" Margin="5,0,0,0">
                        <Button x:Name="ButtonXMinUp" Content="▲" Height="15" FontSize="8" 
                                Click="ButtonXMinUp_Click" Margin="0,0,0,1"/>
                        <Button x:Name="ButtonXMinDown" Content="▼" Height="15" FontSize="8" 
                                Click="ButtonXMinDown_Click"/>
                    </StackPanel>
                </Grid>

                <!-- X Max -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="X Max:" VerticalAlignment="Center"/>
                    <TextBox x:Name="TextBoxXMax" Grid.Column="1" VerticalAlignment="Center" 
                             Text="{Binding Xmax}"
                             PreviewTextInput="NumbersOnly_PreviewTextInput"/>
                    <StackPanel Grid.Column="2" Orientation="Vertical" Margin="5,0,0,0">
                        <Button x:Name="ButtonXMaxUp" Content="▲" Height="15" FontSize="8" 
                                Click="ButtonXMaxUp_Click" Margin="0,0,0,1"/>
                        <Button x:Name="ButtonXMaxDown" Content="▼" Height="15" FontSize="8" 
                                Click="ButtonXMaxDown_Click"/>
                    </StackPanel>
                </Grid>

                <!-- Y Min -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="Y Min:" VerticalAlignment="Center"/>
                    <TextBox x:Name="TextBoxYMin" Grid.Column="1" VerticalAlignment="Center" 
                             Text="{Binding Ymin}"
                             PreviewTextInput="SignedNumbersOnly_PreviewTextInput"/>
                    <StackPanel Grid.Column="2" Orientation="Vertical" Margin="5,0,0,0">
                        <Button x:Name="ButtonYMinUp" Content="▲" Height="15" FontSize="8" 
                                Click="ButtonYMinUp_Click" Margin="0,0,0,1"/>
                        <Button x:Name="ButtonYMinDown" Content="▼" Height="15" FontSize="8" 
                                Click="ButtonYMinDown_Click"/>
                    </StackPanel>
                </Grid>

                <!-- Y Max -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    
                    <Label Grid.Column="0" Content="Y Max:" VerticalAlignment="Center"/>
                    <TextBox x:Name="TextBoxYMax" Grid.Column="1" VerticalAlignment="Center" 
                             Text="{Binding Ymax}"
                             PreviewTextInput="SignedNumbersOnly_PreviewTextInput"/>
                    <StackPanel Grid.Column="2" Orientation="Vertical" Margin="5,0,0,0">
                        <Button x:Name="ButtonYMaxUp" Content="▲" Height="15" FontSize="8" 
                                Click="ButtonYMaxUp_Click" Margin="0,0,0,1"/>
                        <Button x:Name="ButtonYMaxDown" Content="▼" Height="15" FontSize="8" 
                                Click="ButtonYMaxDown_Click"/>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Grid>
    </Border>
</Window>
