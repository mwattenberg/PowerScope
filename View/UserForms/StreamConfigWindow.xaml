<Window x:Class="PowerScope.View.UserForms.SerialConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:PowerScope.View.UserForms"
        Title="Input Data Stream Configuratoin" Height="600" Width="480" 
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="NoResize" 
        WindowStartupLocation="CenterScreen"
        Background="Transparent"
        FontFamily="{DynamicResource {x:Static SystemFonts.MessageFontFamily}}"
        FontSize="{DynamicResource {x:Static SystemFonts.MessageFontSize}}">
    <Window.Resources>
        <!-- Dark theme styles using global resources and system fonts -->
        <Style TargetType="Label" BasedOn="{StaticResource LabelStyle}">
            <!-- Inherits system font settings from LabelStyle in App.xaml -->
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource SystemFontStyle}">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_TextBoxBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" 
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Focusable="false"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}" 
                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="20"/>
                                                </Grid.ColumnDefinitions>
                                                <Path x:Name="Arrow" Grid.Column="1" 
                                                      Fill="{DynamicResource PlotSettings_LabelForegroundBrush}" 
                                                      HorizontalAlignment="Center" 
                                                      VerticalAlignment="Center" 
                                                      Data="M 0 0 L 4 4 L 8 0 Z"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonHoverBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonPressedBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" 
                                            IsHitTestVisible="False" 
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                   Style="{x:Null}" 
                                   Background="Transparent"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center" 
                                   Margin="{TemplateBinding Padding}"
                                   Focusable="True" 
                                   Visibility="Hidden"
                                   IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" 
                                 Placement="Bottom"
                                 IsOpen="{TemplateBinding IsDropDownOpen}"
                                 AllowsTransparency="True" 
                                 Focusable="False"
                                 PopupAnimation="Slide">
                                <Grid Name="DropDown" 
                                    SnapsToDevicePixels="True" 
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" 
                                          Background="{DynamicResource PlotSettings_TextBoxBackgroundBrush}" 
                                          BorderThickness="1"
                                          BorderBrush="{DynamicResource PlotSettings_BorderBrush}">
                                        <Border.Effect>
                                            <DropShadowEffect Color="{DynamicResource PlotSettings_ShadowColor}" BlurRadius="5" ShadowDepth="2" Opacity="0.3"/>
                                        </Border.Effect>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBoxItem" BasedOn="{StaticResource SystemFontStyle}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" 
                                Background="{TemplateBinding Background}" 
                                BorderThickness="0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PlotSettings_ButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PlotSettings_ButtonPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,3"/>
        </Style>
        <Style TargetType="RadioButton" BasedOn="{StaticResource SystemFontStyle}">
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource SystemFontStyle}">
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
        </Style>
        <Style TargetType="TabControl" BasedOn="{StaticResource SystemFontStyle}">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="TabItem" BasedOn="{StaticResource SystemFontStyle}">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_TextBoxBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,1,1,0" 
                                CornerRadius="3,3,0,0" 
                                Margin="0,0,0,0">
                            <ContentPresenter x:Name="ContentSite" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Center" 
                                            ContentSource="Header" 
                                            Margin="12,5,12,5"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PlotSettings_ButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF383838"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Custom close button style -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_CloseButtonForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_CloseButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_CloseButtonPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Style for bold labels -->
        <Style x:Key="BoldLabelStyle" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <!-- Style for italic text -->
        <Style x:Key="ItalicTextStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamily}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSize}}"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Foreground" Value="Gray"/>
        </Style>
    </Window.Resources>
    <!-- Main container with border and drop shadow -->
    <Border Background="{DynamicResource PlotSettings_BackgroundBrush}" 
            BorderBrush="{DynamicResource PlotSettings_BorderBrush}" 
            BorderThickness="1"
            CornerRadius="5">
        <Border.Effect>
            <DropShadowEffect Color="{DynamicResource PlotSettings_ShadowColor}" BlurRadius="10" ShadowDepth="3" Opacity="0.5"/>
        </Border.Effect>
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- Custom title bar -->
            <Grid Grid.Row="0" Background="{DynamicResource PlotSettings_TitleBarBrush}" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Input Stream Configuration" 
                           Foreground="{DynamicResource PlotSettings_LabelForegroundBrush}" 
                           FontWeight="SemiBold"
                           VerticalAlignment="Center" 
                           Margin="15,8"/>
                <!-- Close button -->
                <Button Grid.Column="1" 
                        Style="{StaticResource CloseButtonStyle}"
                        Content="✕" 
                        Click="CloseButton_Click"
                        ToolTip="Close"/>
            </Grid>

            <!-- Content Area -->
            <DockPanel Grid.Row="2" Margin="10,10,10,0">
                <!-- Tab Control -->
                <TabControl x:Name="TabControl_StreamTypes" SelectionChanged="TabControl_SelectionChanged">
                    <!-- Serial Tab -->
                    <TabItem Header="Serial" x:Name="TabItem_Serial">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="10" VerticalAlignment="Top">
                                <!-- Port -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Port:" VerticalAlignment="Center" ToolTip="Select the serial port to use." Width="80"/>
                                    <ComboBox x:Name="ComboBox_Port" Width="200" SelectedValue="{Binding Port, Mode=TwoWay}" SelectedValuePath="Port" />
                                </StackPanel>
                                <!-- Baud -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Baud:" VerticalAlignment="Center" ToolTip="Set the baud rate for serial communication. You can use scientific notation (e.g., 1e6 for 1000000)." Width="80"/>
                                    <TextBox x:Name="TextBox_Baud" Width="200" Text="{Binding Baud, Mode=TwoWay}" 
                                             PreviewTextInput="BaudOnly_PreviewTextInput" 
                                             ToolTip="Enter baud rate (numbers and 'e' for exponent, e.g., 115200 or 1e6)" />
                                </StackPanel>
                                <!-- Databits -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Databits:" VerticalAlignment="Center" ToolTip="Choose the number of data bits per frame." Width="80"/>
                                    <ComboBox x:Name="ComboBox_Databits" Width="200" SelectedValue="{Binding DataBits, Mode=TwoWay}" SelectedValuePath="Content">
                                        <ComboBoxItem Content="8" IsSelected="True"/>
                                        <ComboBoxItem Content="7"/>
                                        <ComboBoxItem Content="6"/>
                                        <ComboBoxItem Content="5"/>
                                    </ComboBox>
                                </StackPanel>
                                <!-- Stop bits -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Stop bits:" VerticalAlignment="Center" ToolTip="Choose the number of stop bits." Width="80"/>
                                    <ComboBox x:Name="ComboBox_Stopbits" Width="200" SelectedValue="{Binding StopBits, Mode=TwoWay}" SelectedValuePath="Content">
                                        <ComboBoxItem Content="1" IsSelected="True"/>
                                        <ComboBoxItem Content="2"/>
                                    </ComboBox>
                                </StackPanel>
                                <!-- Parity -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Parity:" VerticalAlignment="Center" ToolTip="Select the parity mode for error checking." Width="80"/>
                                    <ComboBox x:Name="ComboBox_Parity" Width="200" SelectedValue="{Binding Parity, Mode=TwoWay}" SelectedValuePath="Content">
                                        <ComboBoxItem Content="None" IsSelected="True"/>
                                        <ComboBoxItem Content="Odd"/>
                                        <ComboBoxItem Content="Even"/>
                                    </ComboBox>
                                </StackPanel>
                                <!-- Channels -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Channels:" VerticalAlignment="Center" ToolTip="Set the number of data channels (numbers only)." Width="80"/>
                                    <TextBox x:Name="TextBox_Channels" Width="200" Text="{Binding NumberOfChannels, Mode=TwoWay}" 
                                             PreviewTextInput="NumbersOnly_PreviewTextInput" 
                                             ToolTip="Enter number of channels (numbers only, e.g., 1, 2, 8)" />
                                </StackPanel>
                                <!-- Data format -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Data format:" VerticalAlignment="Center" ToolTip="Raw binary uses fewer bits per value but is harder to debug. ASCII is easy to debug but requires more bits per value." Width="80"/>
                                    <ComboBox x:Name="ComboBox_DataFormat" Width="200" SelectedValue="{Binding DataFormat, Mode=TwoWay}" SelectedValuePath="Tag">
                                        <ComboBoxItem Content="Raw binary" Tag="RawBinary" />
                                        <ComboBoxItem Content="ASCII" Tag="ASCII" />
                                    </ComboBox>
                                </StackPanel>
                                <!-- Raw binary conditional controls -->
                                <StackPanel x:Name="Panel_RawBinary" Visibility="Collapsed" Margin="0,0,0,5">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                        <Label Content="Frame start:" VerticalAlignment="Center" ToolTip="Optional but recommended. Specify the frame start sequence to distinguish between frames." Width="80"/>
                                        <TextBox x:Name="TextBox_FrameStart" Width="200" Text="{Binding FrameStart, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                        <Label Content="Number Type:" VerticalAlignment="Center" ToolTip="Select the type of numbers in the data stream." Width="80"/>
                                        <ComboBox x:Name="ComboBox_NumberType" Width="200" SelectedValue="{Binding NumberType, Mode=TwoWay}" SelectedValuePath="Tag">
                                            <ComboBoxItem Content="Uint8" Tag="Uint8" />
                                            <ComboBoxItem Content="Int8" Tag="Int8" />
                                            <ComboBoxItem Content="Uint16" Tag="Uint16" />
                                            <ComboBoxItem Content="Int16" Tag="Int16" IsSelected="True" />
                                            <ComboBoxItem Content="Uint32" Tag="Uint32" />
                                            <ComboBoxItem Content="Int32" Tag="Int32" />
                                            <ComboBoxItem Content="Float" Tag="Float" />
                                        </ComboBox>
                                    </StackPanel>
                                </StackPanel>
                                <!-- ASCII conditional controls -->
                                <StackPanel x:Name="Panel_ASCII" Visibility="Collapsed" Margin="0,0,0,5">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Column delimiter:" VerticalAlignment="Center" ToolTip="Set the delimiter used to separate columns in ASCII data." Width="80"/>
                                        <ComboBox x:Name="ComboBox_ColumnDelimiter" Width="200" SelectedValue="{Binding Delimiter, Mode=TwoWay}" SelectedValuePath="Content">
                                            <ComboBoxItem Content="Comma" IsSelected="True"/>
                                            <ComboBoxItem Content="Space"/>
                                            <ComboBoxItem Content="CRLF"/>
                                        </ComboBox>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>

                    <!-- FTDI MPSSE Tab (moved to second position) -->
                    <TabItem Header="FTDI MPSSE" x:Name="TabItem_FTDI">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="10" VerticalAlignment="Top">
                                <!-- Device Selection -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Device:" VerticalAlignment="Center" ToolTip="Select the FTDI device to use." Width="80"/>
                                    <ComboBox x:Name="ComboBox_FTDIDevice" Width="200" SelectedItem="{Binding FtdiSelectedDevice, Mode=TwoWay}" />
                                </StackPanel>
                                
                                <!-- MPSSE Config Selection -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Config:" VerticalAlignment="Center" ToolTip="Select the MPSSE configuration mode." Width="80"/>
                                    <ComboBox x:Name="ComboBox_MPSSEConfig" Width="200">
                                        <ComboBoxItem Content="SPI" IsSelected="True"/>
                                    </ComboBox>
                                </StackPanel>
                                
                                <!-- Channels -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="Channels:" VerticalAlignment="Center" ToolTip="Set the number of data channels (numbers only)." Width="80"/>
                                    <TextBox x:Name="TextBox_FTDIChannels" Width="200" Text="{Binding NumberOfChannels, Mode=TwoWay}"
                                             PreviewTextInput="NumbersOnly_PreviewTextInput" 
                                             ToolTip="Enter number of channels (numbers only, e.g., 1, 2, 8)" />
                                </StackPanel>
                                
                                <!-- Raw binary controls (always visible, no data format selection) -->
                                <StackPanel x:Name="Panel_FTDIRawBinary" Margin="0,0,0,5">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                        <Label Content="Frame start:" VerticalAlignment="Center" ToolTip="Optional but recommended. Specify the frame start sequence to distinguish between frames." Width="80"/>
                                        <TextBox x:Name="TextBox_FTDIFrameStart" Width="200" Text="{Binding FrameStart, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                        <Label Content="Number Type:" VerticalAlignment="Center" ToolTip="Select the type of numbers in the data stream." Width="80"/>
                                        <ComboBox x:Name="ComboBox_FTDINumberType" Width="200">
                                            <ComboBoxItem Content="Uint8" Tag="Uint8" />
                                            <ComboBoxItem Content="Int8" Tag="Int8" />
                                            <ComboBoxItem Content="Uint16" Tag="Uint16" />
                                            <ComboBoxItem Content="Int16" Tag="Int16" IsSelected="True" />
                                            <ComboBoxItem Content="Uint32" Tag="Uint32" />
                                            <ComboBoxItem Content="Int32" Tag="Int32" />
                                            <ComboBoxItem Content="Float" Tag="Float" />
                                        </ComboBox>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>

                    <TabItem Header="USB">
                        <StackPanel Margin="10" VerticalAlignment="Top">
                            <Label Content="Future releases will support direct connection to USB device via WinUSB."/>
                            <Label Content="Focus will be on Infineon PSOC 6 at first."/>
                            <!-- Add USB controls as needed -->
                        </StackPanel>
                    </TabItem>
                    
                    <!-- Audio Tab -->
                    <TabItem Header="Audio" x:Name="TabItem_Audio">
                        <StackPanel Margin="10">
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Label Content="Input:" VerticalAlignment="Center" Width="50"/>
                                <ComboBox x:Name="ComboBox_AudioDevices" Width="250" SelectedItem="{Binding AudioDevice, Mode=TwoWay}" SelectedIndex="{Binding AudioDeviceIndex, Mode=TwoWay}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Label Content="Sample rate:" VerticalAlignment="Center" Width="80"/>
                                <ComboBox x:Name="ComboBox_SampleRates" Width="120" SelectedValue="{Binding AudioSampleRate, Mode=TwoWay}" SelectedValuePath="Content" />
                            </StackPanel>
                            <!-- Add your Audio controls here -->
                        </StackPanel>
                    </TabItem>
                    <!-- Demo Tab -->
                    <TabItem Header="Demo" x:Name="TabItem_Demo">
                        <StackPanel Margin="10" VerticalAlignment="Top">
                            <Label Content="Demo Mode Configuration" Style="{StaticResource BoldLabelStyle}" Margin="0,0,0,10"/>
                            <Label Content="This mode generates simulated data for testing and demonstration purposes."/>
                            <Label Content="No external hardware required." Margin="0,0,0,10"/>
                            
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Label Content="Channels:" VerticalAlignment="Center" Width="80"/>
                                <TextBox x:Name="TextBox_DemoChannels" Width="200" Text="{Binding NumberOfChannels, Mode=TwoWay}" 
                                         PreviewTextInput="NumbersOnly_PreviewTextInput" 
                                         ToolTip="Enter number of channels (numbers only, e.g., 1, 2, 8)" />
                            </StackPanel>
                            
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Label Content="Sample Rate:" VerticalAlignment="Center" Width="80"/>
                                <ComboBox x:Name="ComboBox_DemoSampleRate" Width="200" IsEditable="True" Text="{Binding DemoSampleRate, Mode=TwoWay}" SelectedValuePath="Content">
                                    <ComboBoxItem Content="1000"/>
                                    <ComboBoxItem Content="10000" IsSelected="True"/>
                                    <ComboBoxItem Content="20000"/>
                                    <ComboBoxItem Content="50000"/>
                                    
                                </ComboBox>
                            </StackPanel>
                            
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Label Content="Signal Type:" VerticalAlignment="Center" Width="80"/>
                                <ComboBox x:Name="ComboBox_DemoSignalType" Width="200" SelectedValue="{Binding DemoSignalType, Mode=TwoWay}" SelectedValuePath="Content">
                                    <ComboBoxItem Content="Sine Wave" IsSelected="True"/>
                                    <ComboBoxItem Content="Square Wave"/>
                                    <ComboBoxItem Content="Triangle Wave"/>
                                    <ComboBoxItem Content="Random Noise"/>
                                    <ComboBoxItem Content="Mixed Signals"/>
                                    <ComboBoxItem Content="Chirp Signal"/>
                                    <ComboBoxItem Content="Tones"/>
                                    <ComboBoxItem Content="sin(x)/x"/>
                                </ComboBox>
                            </StackPanel>
                            
                            <TextBlock x:Name="InfoTextBlock" Text="Demo mode will generate continuous data streams for visualization and testing." 
                                      Margin="0,20,0,0" Style="{StaticResource ItalicTextStyle}"/>
                        </StackPanel>
                    </TabItem>
                    
                    <!-- File Tab -->
                    <TabItem Header="File" x:Name="TabItem_File">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="10" VerticalAlignment="Top">
                                <Label Content="File Data Stream Configuration" Style="{StaticResource BoldLabelStyle}" Margin="0,0,0,10"/>

                                <!-- File Selection -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                    <Label Content="File Path:" VerticalAlignment="Center" Width="80"/>
                                    <TextBox x:Name="TextBox_FilePath" Width="250" Text="{Binding FilePath, Mode=TwoWay}" 
                                             IsReadOnly="True" ToolTip="Click Browse to select a data file"/>
                                    <Button x:Name="Button_BrowseFile" Content="Browse..." Width="75" 
                                            Margin="10,0,0,0" Click="Button_BrowseFile_Click"/>
                                </StackPanel>
                                
                                <!-- File Parse Status -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                                    <Label Content="Status:" VerticalAlignment="Center" Width="80"/>
                                    <TextBlock x:Name="TextBlock_FileStatus" Text="{Binding FileParseStatus, Mode=OneWay}" 
                                               VerticalAlignment="Center" TextWrapping="Wrap" Width="320"
                                               Foreground="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
                                </StackPanel>
                                
                                <!-- Parsed File Information -->
                                <GroupBox Header="Detected File Properties" Margin="0,0,0,10" 
                                          BorderBrush="{DynamicResource PlotSettings_BorderBrush}"
                                          Foreground="{DynamicResource PlotSettings_LabelForegroundBrush}">
                                    <StackPanel Margin="10">
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                            <Label Content="Sample Rate:" Width="100"/>
                                            <TextBlock Text="{Binding FileSampleRate, StringFormat='{}{0} Hz'}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                            <Label Content="Channels:" Width="100"/>
                                            <TextBlock Text="{Binding NumberOfChannels}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                            <Label Content="Total Samples:" Width="100"/>
                                            <TextBlock Text="{Binding FileTotalSamples, StringFormat='{}{0:N0}'}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                            <Label Content="Delimiter:" Width="100"/>
                                            <TextBlock Text="{Binding FileDelimiter}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                            <Label Content="Has Header:" Width="100"/>
                                            <TextBlock Text="{Binding FileHasHeader}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </StackPanel>
                                </GroupBox>
                                
                                <!-- Channel Labels -->

                                <!-- Instructions -->
                                <TextBlock Text="Instructions:" FontWeight="Bold" Margin="0,10,0,5"/>
                                <TextBlock TextWrapping="Wrap" Margin="0,0,0,0" Style="{StaticResource ItalicTextStyle}">
                                    <Run Text="• Select a CSV or text file containing your data"/>
                                    <LineBreak/>
                                    <Run Text="• The file header will be automatically parsed for metadata"/>
                                    <LineBreak/>
                                    <Run Text="• Files created by PowerScope recording are fully supported"/>
                                    <LineBreak/>
                                    <Run Text="• Playback will loop continuously as configured"/>
                                </TextBlock>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </DockPanel>
            
            <!-- Up/Down Sampling Controls -->
            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Left" Margin="20,10,20,0">
                <Label Content="Up / down sampling:" VerticalAlignment="Center" Width="130" 
                       ToolTip="Sampling factor: positive values for upsampling, negative for downsampling, 0 for no change"/>
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="Button_SamplingDown" Content="▼" Width="25" Height="25" 
                            Click="Button_SamplingDown_Click" ToolTip="Decrease sampling factor"
                            FontSize="10" Padding="0"/>
                    <TextBox x:Name="TextBox_UpDownSampling" Width="50" Height="25" 
                             Text="{Binding UpDownSampling, Mode=TwoWay}" 
                             PreviewTextInput="SamplingFactor_PreviewTextInput"
                             TextChanged="SamplingFactor_TextChanged"
                             TextAlignment="Center" VerticalContentAlignment="Center"
                             ToolTip="Range: -9 to +9. Positive = upsampling, Negative = downsampling"/>
                    <Button x:Name="Button_SamplingUp" Content="▲" Width="25" Height="25" 
                            Click="Button_SamplingUp_Click" ToolTip="Increase sampling factor"
                            FontSize="10" Padding="0"/>
                </StackPanel>
            </StackPanel>
            
            <!-- Buttons -->
            <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right" Margin="20,10,20,20">
                <Button Content="Connect" Width="75" Margin="0,0,10,0" Click="Button_Connect_Click"/>
                <Button Content="Cancel" Width="75" Click="Button_Cancel_Click"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>