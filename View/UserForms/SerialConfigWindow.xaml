<Window x:Class="SerialPlotDN_WPF.View.UserForms.SerialConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="Serial Configuration" Height="420" Width="480" 
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="NoResize" 
        WindowStartupLocation="CenterScreen"
        Background="Transparent">
    <Window.Resources>
        <!-- Dark theme styles using global resources -->
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_TextBoxBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="5,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" 
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Focusable="false"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}" 
                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="20"/>
                                                </Grid.ColumnDefinitions>
                                                <Path x:Name="Arrow" Grid.Column="1" 
                                                      Fill="{DynamicResource PlotSettings_LabelForegroundBrush}" 
                                                      HorizontalAlignment="Center" 
                                                      VerticalAlignment="Center" 
                                                      Data="M 0 0 L 4 4 L 8 0 Z"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonHoverBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonPressedBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" 
                                            IsHitTestVisible="False" 
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                   Style="{x:Null}" 
                                   Background="Transparent"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center" 
                                   Margin="{TemplateBinding Padding}"
                                   Focusable="True" 
                                   Visibility="Hidden"
                                   IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" 
                                 Placement="Bottom"
                                 IsOpen="{TemplateBinding IsDropDownOpen}"
                                 AllowsTransparency="True" 
                                 Focusable="False"
                                 PopupAnimation="Slide">
                                <Grid Name="DropDown" 
                                    SnapsToDevicePixels="True" 
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" 
                                          Background="{DynamicResource PlotSettings_TextBoxBackgroundBrush}" 
                                          BorderThickness="1"
                                          BorderBrush="{DynamicResource PlotSettings_BorderBrush}">
                                        <Border.Effect>
                                            <DropShadowEffect Color="{DynamicResource PlotSettings_ShadowColor}" BlurRadius="5" ShadowDepth="2" Opacity="0.3"/>
                                        </Border.Effect>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" 
                                Background="{TemplateBinding Background}" 
                                BorderThickness="0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PlotSettings_ButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PlotSettings_ButtonPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_TextBoxBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,3"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_TextBoxBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_LabelForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,1,1,0" 
                                CornerRadius="3,3,0,0" 
                                Margin="0,0,0,0">
                            <ContentPresenter x:Name="ContentSite" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Center" 
                                            ContentSource="Header" 
                                            Margin="12,5,12,5"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PlotSettings_ButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF383838"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource PlotSettings_TextBoxBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_ButtonForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PlotSettings_BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_ButtonPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Custom close button style -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PlotSettings_CloseButtonForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_CloseButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PlotSettings_CloseButtonPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!-- Main container with border and drop shadow -->
    <Border Background="{DynamicResource PlotSettings_BackgroundBrush}" 
            BorderBrush="{DynamicResource PlotSettings_BorderBrush}" 
            BorderThickness="1"
            CornerRadius="5">
        <Border.Effect>
            <DropShadowEffect Color="{DynamicResource PlotSettings_ShadowColor}" BlurRadius="10" ShadowDepth="3" Opacity="0.5"/>
        </Border.Effect>
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- Custom title bar -->
            <Grid Grid.Row="0" Background="{DynamicResource PlotSettings_TitleBarBrush}" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Serial Configuration" 
                           Foreground="{DynamicResource PlotSettings_LabelForegroundBrush}" 
                           FontSize="14" FontWeight="SemiBold"
                           VerticalAlignment="Center" 
                           Margin="15,8"/>
                <!-- Close button -->
                <Button Grid.Column="1" 
                        Style="{StaticResource CloseButtonStyle}"
                        Content="✕" 
                        Click="CloseButton_Click"
                        ToolTip="Close"/>
            </Grid>
            <!-- Header -->
            <TextBlock Grid.Row="1" Text="Configure serial port settings and data format" 
                       FontSize="12" 
                       Foreground="{DynamicResource PlotSettings_HeaderForegroundBrush}" 
                       Margin="20,15,20,5"/>
            <!-- Content Area -->
            <DockPanel Grid.Row="2" Margin="10,10,10,0">
                <!-- Tab Control -->
                <TabControl>
                    <!-- Port Tab -->
                    <TabItem Header="Port">
                        <StackPanel Margin="10" VerticalAlignment="Top">
                            <!-- Port -->
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Label Content="Port:" Width="80"/>
                                <ComboBox x:Name="ComboBox_Port" Width="200" />
                            </StackPanel>
                            <!-- Baud -->
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Label Content="Baud:" Width="80"/>
                                <ComboBox x:Name="ComboBox_Baud" Width="200" IsEditable="True"/>
                            </StackPanel>
                            <!-- Databits, Stop bits, Parity horizontally -->
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,0" HorizontalAlignment="Left">
                                <!-- Databits -->
                                <StackPanel Margin="0,0,20,0">
                                    <Label Content="Databits:"/>
                                    <RadioButton x:Name="Radio_Databits8" Content="8 bits" GroupName="Databits" IsChecked="True"/>
                                    <RadioButton x:Name="Radio_Databits7" Content="7 bits" GroupName="Databits"/>
                                    <RadioButton x:Name="Radio_Databits6" Content="6 bits" GroupName="Databits"/>
                                    <RadioButton x:Name="Radio_Databits5" Content="5 bits" GroupName="Databits"/>
                                </StackPanel>
                                <!-- Stop bits -->
                                <StackPanel Margin="0,0,20,0">
                                    <Label Content="Stop bits:"/>
                                    <RadioButton x:Name="Radio_Stopbits1" Content="1 bit" GroupName="Stopbits" IsChecked="True"/>
                                    <RadioButton x:Name="Radio_Stopbits2" Content="2 bits" GroupName="Stopbits"/>
                                </StackPanel>
                                <!-- Parity -->
                                <StackPanel>
                                    <Label Content="Parity:"/>
                                    <RadioButton x:Name="Radio_ParityNone" Content="None" GroupName="Parity" IsChecked="True"/>
                                    <RadioButton x:Name="Radio_ParityOdd" Content="Odd" GroupName="Parity"/>
                                    <RadioButton x:Name="Radio_ParityEven" Content="Even" GroupName="Parity"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </TabItem>
                    <!-- Dataformat Tab -->
                    <TabItem Header="Dataformat" Height="28" VerticalAlignment="Top">
                        <Grid Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!-- Left: Format selection -->
                            <StackPanel Grid.Column="0" VerticalAlignment="Top">
                                <Label Content="Format:"/>
                                <RadioButton x:Name="Radio_SimpleBinary" Content="Simple Binary" GroupName="Format" IsChecked="True" Checked="DataFormatRadio_Checked"/>
                                <RadioButton x:Name="Radio_ASCII" Content="ASCII" GroupName="Format" Checked="DataFormatRadio_Checked"/>
                                <RadioButton x:Name="Radio_CustomFrame" Content="Custom Frame" GroupName="Format" Checked="DataFormatRadio_Checked"/>
                            </StackPanel>
                            <!-- Right: Format-specific settings -->
                            <Grid Grid.Column="1" Margin="20,0,0,0">
                                <!-- Simple Binary Panel -->
                                <StackPanel x:Name="Panel_SimpleBinary" Visibility="Visible">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <Label Content="Number of Channels:" Width="130"/>
                                        <xctk:IntegerUpDown x:Name="NumChannelsUpDown" Width="60" Minimum="1" Maximum="32" Value="1"/>
                                    </StackPanel>
                                    <Label Content="Number Type:"/>
                                    <StackPanel Margin="20,0,0,10">
                                        <RadioButton x:Name="Radio_Uint8" Content="Uint8" GroupName="NumberType" IsChecked="True"/>
                                        <RadioButton x:Name="Radio_Uint16" Content="Uint16" GroupName="NumberType"/>
                                        <RadioButton x:Name="Radio_Uint32" Content="Uint32" GroupName="NumberType"/>
                                        <RadioButton x:Name="Radio_Int8" Content="Int8" GroupName="NumberType"/>
                                        <RadioButton x:Name="Radio_Int16" Content="Int16" GroupName="NumberType"/>
                                        <RadioButton x:Name="Radio_Int32" Content="Int32" GroupName="NumberType"/>
                                        <RadioButton x:Name="Radio_Float" Content="Float" GroupName="NumberType"/>
                                        <RadioButton x:Name="Radio_Double" Content="Double" GroupName="NumberType"/>
                                    </StackPanel>
                                    <Label Content="Endianness:"/>
                                    <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
                                        <RadioButton x:Name="Radio_LittleEndian" Content="Little Endian" GroupName="Endian" IsChecked="True"/>
                                        <RadioButton x:Name="Radio_BigEndian" Content="Big Endian" GroupName="Endian"/>
                                    </StackPanel>
                                </StackPanel>
                                <!-- ASCII Panel -->
                                <StackPanel x:Name="Panel_ASCII" Visibility="Collapsed">
                                    <Label Content="Column delimited:"/>
                                    <StackPanel Margin="20,0,0,0">
                                        <RadioButton x:Name="Radio_DelimiterComma" Content="Comma" GroupName="Delimiter" IsChecked="True"/>
                                        <RadioButton x:Name="Radio_DelimiterSpace" Content="Space" GroupName="Delimiter"/>
                                        <RadioButton x:Name="Radio_DelimiterTab" Content="Tab" GroupName="Delimiter"/>
                                        <StackPanel Orientation="Horizontal">
                                            <RadioButton x:Name="Radio_DelimiterOther" Content="Other" GroupName="Delimiter"/>
                                            <TextBox x:Name="TextBox_DelimiterOther" Width="40" Margin="5,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                                <!-- Custom Frame Panel -->
                                <StackPanel x:Name="Panel_CustomFrame" Visibility="Collapsed">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <Label Content="Number of Channels:" Width="130"/>
                                        <xctk:IntegerUpDown x:Name="NumChannelsUpDown_Custom" Width="60" Minimum="1" Maximum="32" Value="1"/>
                                    </StackPanel>
                                    <Label Content="Number Type:"/>
                                    <StackPanel Margin="20,0,0,10">
                                        <RadioButton x:Name="Radio_Uint8_Custom" Content="Uint8" GroupName="NumberTypeCustom" IsChecked="True"/>
                                        <RadioButton x:Name="Radio_Uint16_Custom" Content="Uint16" GroupName="NumberTypeCustom"/>
                                        <RadioButton x:Name="Radio_Uint32_Custom" Content="Uint32" GroupName="NumberTypeCustom"/>
                                        <RadioButton x:Name="Radio_Int8_Custom" Content="Int8" GroupName="NumberTypeCustom"/>
                                        <RadioButton x:Name="Radio_Int16_Custom" Content="Int16" GroupName="NumberTypeCustom"/>
                                        <RadioButton x:Name="Radio_Int32_Custom" Content="Int32" GroupName="NumberTypeCustom"/>
                                        <RadioButton x:Name="Radio_Float_Custom" Content="Float" GroupName="NumberTypeCustom"/>
                                        <RadioButton x:Name="Radio_Double_Custom" Content="Double" GroupName="NumberTypeCustom"/>
                                    </StackPanel>
                                    <Label Content="Endianness:"/>
                                    <StackPanel Orientation="Horizontal" Margin="20,0,0,10">
                                        <RadioButton x:Name="Radio_LittleEndian_Custom" Content="Little Endian" GroupName="EndianCustom" IsChecked="True"/>
                                        <RadioButton x:Name="Radio_BigEndian_Custom" Content="Big Endian" GroupName="EndianCustom"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                        <Label Content="Frame Start:" Width="130"/>
                                        <TextBox x:Name="TextBox_FrameStart" Width="120"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <!-- Audio Tab -->
                    <TabItem Header="Audio">
                        <StackPanel Margin="10">
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Label Content="Input:" VerticalAlignment="Center" Width="50"/>
                                <ComboBox x:Name="ComboBox_AudioDevices" Width="250"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Label Content="Sample rate:" VerticalAlignment="Center" Width="80"/>
                                <ComboBox x:Name="ComboBox_SampleRates" Width="120"/>
                            </StackPanel>
                            <!-- Add your Audio controls here -->
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </DockPanel>
            <!-- Buttons -->
            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="20,10,20,20">
                <Button Content="Connect" Width="75" Margin="0,0,10,0" Click="Button_OK_Click"/>
                <Button Content="Cancel" Width="75" Click="Button_Cancel_Click"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>
